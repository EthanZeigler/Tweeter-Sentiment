airlines <- nycflights13::airlines
# 1. How many departing flights were recorded in NYC for 2013? [1]
nrow(flights)
# 2. What types of engines are featured on the airplanes? [1]
engines <- planes %>%
distinct(engine)
engines
# 3. What is the most popular model of airplane? [1]
most_popular_airplane <- planes %>%
group_by(model) %>%
mutate(model_count = n()) %>%
ungroup() %>%
distinct(model, .keep_all = TRUE) %>%
filter(model_count == max(model_count))
most_popular_airplane
plot_dat <- ld %>%
filter(month(time_hour) == 1) %>%
group_by(day, origin) %>%
mutate(flights_in_day = n()) %>%
ungroup() %>%
select(time_hour, origin, flights_in_day) %>%
mutate(date = date(time_hour)) %>%
distinct()
ggplot(data = plot_dat, mapping = aes(x = date, y = flights_in_day, color=origin)) +
geom_line() +
labs(x = "date", y = "# of flights", title="Flights in January", color = "Airport")
most_popular_airplane <- planes %>%
group_by(model) %>%
mutate(model_count = n()) %>%
ungroup() %>%
distinct(model, .keep_all = TRUE) %>%
filter(model_count == max(model_count))
most_popular_airplane
View(most_popular_airplane)
busiest_airport <- airports %>%
left_join(flights, airports, by = c("faa" = "origin")) %>%
group_by(faa) %>%
mutate(n = n()) %>%
ungroup() %>%
distinct(name, .keep_all = TRUE) %>%
filter(n == max(n))
View(busiest_airport)
most_used <- planes %>%
left_join(flights, by = "tailnum") %>%
group_by(model) %>%
mutate(n = n()) %>%
ungroup() %>%
select(model, seats, n) %>%
distinct()%>%
filter(n == max(n))
most_used <- planes %>%
left_join(flights, by = "tailnum") %>%
group_by(model) %>%
mutate(n = n()) %>%
ungroup() %>%
select(model, seats, n) %>%
distinct() %>%
filter(n == max(n))
most_used <- planes %>%
left_join(flights, by = "tailnum") %>%
group_by(model) %>%
mutate(n = n()) %>%
ungroup() %>%
select(model, seats, n) %>%
distinct() %>%
filter(n == max(n))
View(most_used)
in_time_zone <- airports %>%
filter(tzone == "America/New_York") %>%
summarize(n = count())
in_time_zone <- airports %>%
filter(tzone == "America/New_York") %>%
summarize(n = count())
in_time_zone <- airports %>%
filter(tzone == "America/New_York") %>%
summarize(n = count())
# 6. How many airports are in the America/New_York time zone? [1]
in_time_zone <- airports %>%
filter(tzone == "America/New_York") %>%
summarize(n = n())
View(in_time_zone)
letters_only <- airports %>%
filter(str_detect(faa, "^[A-Za-z]*$")) %>%
summarize(n = n())
letters_only
ld <- flights %>%
mutate(time_hour = as_date(time_hour))
craziest_day <- ld %>%
mutate(day = date(time_hour)) %>%
group_by(day, origin) %>%
mutate(n = n()) %>%
ungroup() %>%
distinct(day, origin, .keep_all = TRUE) %>%
select(day, origin, n) %>%
group_by(origin) %>%
filter(n == max(n)) %>%
ungroup()
View(craziest_day)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
summarize(airport = origin, wind = mean(wind_speed))
# 9. What was the mean wind speed at each airport for the month of August? [2]
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup() %>%
distinct(airport, wind)
weather
# 9. What was the mean wind speed at each airport for the month of August? [2]
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup() %>%
distinct(origin, wind)
mean_wind
mean_wind <- weather %>%
mutate(date = as_date(time_hour))
View(mean_wind)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin)
View(mean_wind)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed))
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup() %>%
distinct(origin, date)
View(mean_wind)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup() %>%
distinct(origin, date, .keep_all = TRUE) %>%
View(mean_wind)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup() %>%
distinct(origin, date, .keep_all = TRUE)
View(mean_wind)
# 9. What was the mean wind speed at each airport for the month of August? [2]
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup() %>%
select(origin, wind) %>%
distinct()
View(mean_wind)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed)) %>%
ungroup()
View(mean_wind)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin)
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed))
mean_wind <- weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 7) %>%
group_by(origin) %>%
mutate(wind = mean(wind_speed, na.rm = TRUE)) %>%
ungroup() %>%
select(origin, wind) %>%
distinct()
popular_dest <- flights %>%
filter(origin == "JFK") %>%
group_by(dest) %>%
mutate(n = n()) %>%
ungroup() %>%
distinct(origin, dest, .keep_all = TRUE) %>%
arrange(desc(n))
View(popular_dest)
popular_dest <- flights %>%
filter(origin == "JFK") %>%
group_by(dest) %>%
mutate(n = n()) %>%
ungroup() %>%
distinct(origin, dest, .keep_all = TRUE) %>%
arrange(desc(n))
View(ld)
ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date) %>%
mutate(mean_delay = mean(dep_delay)) %>%
select(date, origin, mean_delay)
ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
select(date, origin, mean_delay)
ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
select(date, origin, mean_delay))
ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
select(date, origin, mean_delay)
ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
select(date, origin, mean_delay) %>%
distinct()
#12. Plot the mean departure delay for all flights from each NYC airport
#    for each day of March of 2013. Does one of the NYC airports exhibit
#    longer delays than the others? [3]
ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date, origin) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
select(date, origin, mean_delay) %>%
distinct()
#12. Plot the mean departure delay for all flights from each NYC airport
#    for each day of March of 2013. Does one of the NYC airports exhibit
#    longer delays than the others? [3]
ggplot(ld %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date, origin) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
select(date, origin, mean_delay) %>%
distinct(),
aes(x = date, y = mean_delay, color = origin)) +
geom_line()
source('~/TCNJ/Data Science/ex/a2.R', echo=TRUE)
source('~/TCNJ/Data Science/ex/a2.R', echo=TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(hour(date) <- hour) %>%
mutate(minute(date) <- minute) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(date = `hour<-`(date, hour)) %>%
mutate(date = `minute<-`(date, minute)) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(date=ymd(format(date, paste("%y-%m-%d ", hour,":", minute, sep="")))) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(date=make_datetime(year=year(date), month=month(date), day=day(date), hour=hour, minute=minute)) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(date=make_datetime(year=year(date), month=month(date), day=day(date), hour=hour, min=minute)) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(date=make_datetime(year=year(date), month=month(date), day=day(date), hour=hour, min=minute), tz="UTC") %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_date(time_hour)) %>%
filter(month(date) == 3) %>%
mutate(date=make_datetime(year=year(date), month=month(date), day=day(date), hour=hour, min=minute, tz="UTC")) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_datetime(time_hour)) %>%
filter(month(date) == 3) %>%
do({hour(.$date)<-.$hour; .}) %>%
do({minute(.$date)<-.$minute; .}) %>%
distinct(date, origin, .keep_all = TRUE)
weather %>%
mutate(date = as_datetime(time_hour)) %>%
filter(month(date) == 3) %>%
#  do({hour(.$date)<-.$hour; .}) %>%
#  do({minute(.$date)<-.$minute; .}) %>%
distinct(date, origin, .keep_all = TRUE)
view(weather)
weather %>%
mutate(date = as_datetime(time_hour)) %>%
filter(month(date) == 3) %>%
#  do({hour(.$date)<-.$hour; .}) %>%
#  do({minute(.$date)<-.$minute; .}) %>%
distinct(date, origin, .keep_all = TRUE) %>%
pivot_longer(
cols=c("temp", "wind_speed", "precip"),
names_to = "facet",
values_to = "facet_val",
values_drop_na = FALSE
)
ggplot(weather %>%
mutate(date = as_datetime(time_hour)) %>%
filter(month(date) == 3, origin="LGA") %>%
#  do({hour(.$date)<-.$hour; .}) %>%
#  do({minute(.$date)<-.$minute; .}) %>%
distinct(date, origin, .keep_all = TRUE) %>%
pivot_longer(
cols=c("temp", "wind_speed", "precip"),
names_to = "facet",
values_to = "facet_val",
values_drop_na = FALSE
),
aes(x=date, y=facet_val, color=facet)
) +
facet_wrap(~ facet, scale="free_y") +
geom_line()
ggplot(weather %>%
mutate(date = as_datetime(time_hour)) %>%
filter(month(date) == 3, origin=="LGA") %>%
#  do({hour(.$date)<-.$hour; .}) %>%
#  do({minute(.$date)<-.$minute; .}) %>%
distinct(date, origin, .keep_all = TRUE) %>%
pivot_longer(
cols=c("temp", "wind_speed", "precip"),
names_to = "facet",
values_to = "facet_val",
values_drop_na = FALSE
),
aes(x=date, y=facet_val, color=facet)
) +
facet_wrap(~ facet, scale="free_y") +
geom_line()
ggplot(
weather %>%
mutate(date = as_datetime(time_hour)) %>%
filter(month(date) == 3, origin == "LGA") %>%
#  do({hour(.$date)<-.$hour; .}) %>%
#  do({minute(.$date)<-.$minute; .}) %>%
distinct(date, origin, .keep_all = TRUE) %>%
pivot_longer(
cols = c("temp", "wind_speed", "precip"),
names_to = "facet",
values_to = "facet_val",
values_drop_na = FALSE
),
aes(x = date, y = facet_val, color = facet)) +
facet_wrap( ~ facet, scale = "free_y") +
geom_line() +
labs(x = "time_hour", y = "measurement")
ggplot(
ld_flights %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date, origin) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
select(date, origin, mean_delay) %>%
distinct(),
aes(x = date, y = mean_delay, color = origin)) +
geom_line()
source('~/TCNJ/Data Science/ex/a2.R', echo=TRUE)
ggplot(
ld_flights %>%
filter(month(time_hour) == 3) %>%
mutate(date = date(time_hour)) %>%
group_by(date, origin) %>%
mutate(mean_delay = mean(dep_delay, na.rm = TRUE)) %>%
ungroup() %>%
select(date, origin, mean_delay) %>%
distinct(),
aes(x = date, y = mean_delay, color = origin)) +
geom_line()
install.packages("opendatatoronto")
load("~/TCNJ/Data Science/a3/a3_ttc_subway_delay.RData")
load("~/TCNJ/Data Science/a3/a3_ttc_subway_delay.RData")
View(ttcSubwayDelay2019)
View(ttcSubwayDelayCodebook)
View(ttcSubwayDelayCodebook)
View(ttcSubwayDelayCodes)
View(ttcSubwayDelayCodes)
View(ttcSubwayDelayCodebook)
View(ttcSubwayDelayCodebook)
View(ttcSubwayDelayCodes)
View(ttcSubwayDelayCodes)
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n()) %>%
ungroup(),
aes(Min.Delay, description))
+ geom_boxplot()
require(tivyverse)
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n()) %>%
ungroup(),
aes(Min.Delay, description))
+ geom_boxplot()
require(tivyverse)
require(ggplot2)
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n()) %>%
ungroup(),
aes(Min.Delay, description))
+ geom_boxplot()
require(tivyverse)
install.packages('tidyverse')
require(tivyverse)
library(tivyverse)
library(tivyverse)
library(tidyverse)
load("~/TCNJ/Data Science/a3/a3_ttc_subway_delay.RData")
require(ggplot2)
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n()) %>%
ungroup(),
aes(Min.Delay, description))
+ geom_boxplot()
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n()) %>%
ungroup(),
aes(Min.Delay, description)) + geom_boxplot()
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n(), m = median(Min.Delay)) %>%
top_n(15, Min.Delay) %>%
ungroup(),
aes(Min.Delay, description)) + geom_boxplot()
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n(), m = median(Min.Delay)) %>%
top_n(15, m) %>%
ungroup(),
aes(Min.Delay, description)) + geom_boxplot()
library(tidyverse)
library(ggplot2)
ggplot(ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n(), m = median(Min.Delay)) %>%
slice_max(Min.Delay, 15) %>%
ungroup(),
aes(Min.Delay, description)) + geom_boxplot()
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
source('~/TCNJ/Data Science/a3/a3.R', echo=TRUE)
ttcSubwayDelay2019 %>%
left_join(ttcSubwayDelayCodes) %>%
select(Min.Delay, description) %>%
group_by(description) %>%
mutate(n = n(), m = median(Min.Delay)) %>%
ungroup() %>%
filter(n > 500)
shiny::runApp('fp')
View(ttcSubwayDelayCodes)
install.packages("plotly")
runApp('fp')
install.packages("Cairo")
runApp('fp')
